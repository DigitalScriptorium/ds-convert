# frozen_string_literal: true

# Initial draft of this code generated by Doug Emery using GPT-3.5
# Date: 2023-12-17

require 'spec_helper'

module DS
  module Extractor
    RSpec.describe Title do
      let(:title) do
        described_class.new(
          as_recorded: 'Sample Title',
          vernacular: 'Vernacular Title',
          label: 'Sample Label',
          uri: 'http://example.com/title'
        )
      end

      context '#as_recorded' do
        it 'should have a readable as_recorded attribute' do
          expect(title.as_recorded).to eq('Sample Title')
        end

        it 'should have a writable as_recorded attribute' do
          title.as_recorded = 'New Title'
          expect(title.as_recorded).to eq('New Title')
        end
      end

      context '#vernacular' do
        it 'should have a readable vernacular attribute' do
          expect(title.vernacular).to eq('Vernacular Title')
        end

        it 'should have a writable vernacular attribute' do
          title.vernacular = 'New Vernacular Title'
          expect(title.vernacular).to eq('New Vernacular Title')
        end
      end

      context '#label' do
        it 'should have a readable label attribute' do
          expect(title.label).to eq('Sample Label')
        end

        it 'should have a writable label attribute' do
          title.label = 'New Label'
          expect(title.label).to eq('New Label')
        end
      end

      context '#uri' do
        it 'should have a readable uri attribute' do
          expect(title.uri).to eq('http://example.com/title')
        end

        it 'should have a writable uri attribute' do
          title.uri = 'http://new-example.com/title'
          expect(title.uri).to eq('http://new-example.com/title')
        end
      end

      context '#initialize' do
        it 'should initialize the title with the given attributes' do
          expect(title.as_recorded).to eq('Sample Title')
          expect(title.vernacular).to eq('Vernacular Title')
          expect(title.label).to eq('Sample Label')
          expect(title.uri).to eq('http://example.com/title')
        end

        it 'should be an instance of DS::Extractor::Title' do
          expect(title).to be_an_instance_of(DS::Extractor::Title)
        end
      end

      context '#to_a' do
        it 'should return an array representation of the attributes' do
          expect(title.to_a).to eq(['Sample Title', 'Vernacular Title', 'Sample Label', 'http://example.com/title'])
        end
      end

      context '#to_h' do
        it 'should return a hash representation of the attributes' do
          expect(title.to_h).to eq({
                                     as_recorded: 'Sample Title',
                                     vernacular: 'Vernacular Title',
                                     label: 'Sample Label',
                                     uri: 'http://example.com/title'
                                   })
        end
      end
    end
  end
end